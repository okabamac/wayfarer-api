{
	"swagger": "2.0",
	"info": {
		"description": "Wayfarer API is an API for a public bus transportation\n",
		"version": "1.0.0",
		"title": "Wayfarer API"
	},
	"tags": [{
			"name": "Auth",
			"description": "Authentication into the system"
		},
		{
			"name": "Buses",
			"description": "Registration and Getting of bus"
		},
		{
			"name": "Trips",
			"description": "Creating trips and cancellation"
		},
		{
			"name": "Bookings",
			"description": "Making a booking"
		}
	],
	"paths": {
		"/auth/signup": {
			"post": {
				"tags": [
					"auth"
				],
				"summary": "Create user",
				"description": "This is necessary for logging credentials.",
				"operationId": "createAUser",
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Created user object",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Auth"
					}
				}],
				"responses": {
					"default": {
						"description": "successful operation"
					}
				}
			}
		},
		"/auth/signin": {
			"post": {
				"tags": [
					"auth"
				],
				"summary": "Log in user",
				"description": "This is necessary for logging credentials.",
				"operationId": "loginAUser",
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
					"in": "body",
					"name": "email, password",
					"description": "Logged in user object",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Auth"
					}
				}],
				"responses": {
					"default": {
						"description": "successful operation"
					}
				}
			}
		},
		"/trips": {
			"post": {
				"tags": [
					"trips"
				],
				"summary": "Create a new trip",
				"description": "Admin create a new trip for passengers.",
				"operationId": "createATrip",
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "A new trip object",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Trip"
					}
				}],
				"responses": {
					"default": {
						"description": "successful operation"
					}
				},
				"security": [{
					"Bearer": []
				}]
			},
			"get": {
				"tags": [
					"trips"
				],
				"summary": "Get all trips or filter trips by origin/destination",
				"description": "User can get all trips.",
				"operationId": "getAllTrips",
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
						"name": "origin",
						"in": "query",
						"description": "origin of specified trip",
						"required": false,
						"type": "string"
					},
					{
						"name": "destination",
						"in": "query",
						"description": "destination of specified trip",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"default": {
						"description": "successful operation"
					}
				},
				"security": [{
					"Bearer": []
				}]
			}
		},
		"/trips/{trip_id}": {
			"get": {
				"tags": [
					"trips"
				],
				"summary": "Find trip by ID",
				"description": "Returns a single trip",
				"operationId": "getTripById",
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
					"name": "trip_id",
					"in": "path",
					"description": "ID of trip to return",
					"required": true,
					"type": "integer",
					"format": "int32"
				}],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/Trip"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					}
				},
				"security": [{
					"Bearer": []
				}]
			},
			"patch": {
				"tags": [
					"trips"
				],
				"summary": "Cancel atrip by ID",
				"description": "Returns a single cancelled trip",
				"operationId": "patchTripById",
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
					"name": "trip_id",
					"in": "path",
					"description": "ID of trip to cancel",
					"required": true,
					"type": "integer",
					"format": "int32"
				}],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/Trip"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					}
				},
				"security": [{
					"Bearer": []
				}]
			}
		},
		"/buses": {
			"post": {
				"tags": [
					"buses"
				],
				"summary": "Register a new bus",
				"description": "Admin can register a new bus.",
				"operationId": "registerABus",
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "A new trip object",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Bus"
					}
				}],
				"responses": {
					"default": {
						"description": "successful operation"
					}
				},
				"security": [{
					"Bearer": []
				}]
			},
			"get": {
				"tags": [
					"buses"
				],
				"summary": "Get all buses",
				"description": "User can retrieve all buses.",
				"operationId": "retrieveBuses",
				"produces": [
					"application/json",
					"application/xml"
				],
				"responses": {
					"default": {
						"description": "successful operation"
					}
				},
				"security": [{
					"Bearer": []
				}]
			}
		},
		"/buses/{bus_id}": {
			"get": {
				"tags": [
					"buses"
				],
				"summary": "Find bus by ID",
				"description": "Returns a single bus",
				"operationId": "getBusById",
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
					"name": "bus_id",
					"in": "path",
					"description": "ID of bus to return",
					"required": true,
					"type": "integer",
					"format": "int32"
				}],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/Bus"
						}
					},
					"400": {
						"description": "Invalid ID supplied"
					}
				},
				"security": [{
					"Bearer": []
				}]
			}
		},
		"/bookings": {
			"post": {
				"tags": [
					"bookings"
				],
				"summary": "Make a booking",
				"description": "User can make a booking.",
				"operationId": "makeABooking",
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "A new trip object",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Booking"
					}
				}],
				"responses": {
					"default": {
						"description": "successful operation"
					}
				},
				"security": [{
					"Bearer": []
				}]
			},
			"get": {
				"tags": [
					"bookings"
				],
				"summary": "Get bookings",
				"description": "User can make request to get his/her bookings.",
				"operationId": "getBooking",
				"produces": [
					"application/json",
					"application/xml"
				],
				"responses": {
					"default": {
						"description": "successful operation"
					}
				},
				"security": [{
					"Bearer": []
				}]
			}
		},
		"/bookings/{booking_id}": {
			"delete": {
				"tags": [
					"bookings"
				],
				"summary": "Delete a booking",
				"description": "User can delete his booking.",
				"operationId": "deleteABooking",
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
					"name": "booking_id",
					"in": "path",
					"description": "ID of booking to delete",
					"required": true,
					"type": "integer",
					"format": "int32"
				}],
				"responses": {
					"default": {
						"description": "successful operation"
					}
				},
				"security": [{
					"Bearer": []
				}]
			}
		}
	},
	"securityDefinitions": {
		"Bearer": {
			"type": "apiKey",
			"name": "Authorization",
			"in": "header"
		}
	},
	"definitions": {
		"Booking": {
			"type": "object",
			"properties": {
				"trip_id": {
					"type": "integer",
					"format": "int32"
				},
				"seat_number": {
					"type": "integer",
					"format": "int32"
				}
			},
			"xml": {
				"name": "Category"
			}
		},
		"Auth": {
			"type": "object",
			"properties": {
				"email": {
					"type": "string"
				},
				"first_name": {
					"type": "string"
				},
				"last_name": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
				"confirm_password": {
					"type": "string"
				}
			},
			"xml": {
				"name": "Auth"
			}
		},
		"Trip": {
			"type": "object",
			"properties": {
				"bus_id": {
					"type": "integer",
					"format": "int32"
				},
				"fare": {
					"type": "number",
					"format": "float"
				},
				"origin": {
					"type": "string"
				},
				"destination": {
					"type": "string"
				},
				"trip_date": {
					"type": "string",
					"format": "date-time"
				},
				"departure_time": {
					"type": "string"
				}
			},
			"xml": {
				"name": "Trip"
			}
		},
		"Bus": {
			"type": "object",
			"properties": {
				"number_plate": {
					"type": "string"
				},
				"manufacturer": {
					"type": "string"
				},
				"model": {
					"type": "string"
				},
				"year": {
					"type": "string"
				},
				"capacity": {
					"type": "integer",
					"format": "int32"
				}
			},
			"xml": {
				"name": "Bus"
			}
		}
	},
	"schemes": [
		"https",
		"http"
	],
	"host": "wayfarer-bus-api.herokuapp.com",
	"basePath": "/api/v1"
}